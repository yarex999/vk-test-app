{"version":3,"sources":["panels/Home.js","panels/Detailed.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","userFriends","chooseUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","response","items","map","el","index","onClick","event","i","e","u","data-to","photo_100","Detailed","props","useState","userInfo","setUserInfo","addNote","setAddNote","notes","setNotes","month","useEffect","whichUser","console","log","storage","left","style","margin","display","flexDirection","alignItems","justifyContent","textAlign","padding","photo_200_orig","size","marginBottom","marginTop","level","weight","status","textWrap","bdate","str","result","match","join","getDate","country","faculty_name","university_name","graduation","top","onChange","n","target","value","placeholder","marginLeft","setStorage","domain","note","length","indexU","indexN","slice","STORAGE_TEST","STATUS","App","activePanel","setActivePanel","setUser","setUsersFriends","detailedUser","setDetailedUser","noteStorage","setNoteStorage","popout","setPopout","a","bridge","send","user","app_id","scope","userFriendsToken","method","request_id","params","access_token","friends","key","JSON","stringify","online","keys","Object","values","storageGet","parse","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","friendsArr","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e1b882c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, SimpleCell, Div, Avatar, List } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser, userFriends, chooseUser }) => {\n\t\n\tfunction getDetailedInfo(i,e){\n\t\tchooseUser(u=> i)\n\t\tgo(e);\n\t\t\n\n\t}\n\t\n\treturn (\n\t\t<Panel id={id}>\n\t\t<PanelHeader>Friends</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">I am</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">My friends</Header>}>\n\t\t\t<List>\n\t\t\t\t{ userFriends ? userFriends.response.items.map((el,index) => {\n\t\t\treturn (\n\t\t\t\t<SimpleCell \n\t\t\t\t   onClick={(event)=>getDetailedInfo(index,event)}\n\t\t\t\t   data-to=\"detailed\"\n\t\t\t       key={index}\n\t\t\t\t   before={el.photo_100? <Avatar src={el.photo_100}/> : null}\n\t\t\t\t   description={el.city && el.city.title ? el.city.title: ''}         \n\t\t\t\t>\n\t\t\t\t\t{`${el.first_name} ${el.last_name}`}\n\t\t\t\t</SimpleCell>)}) : ''}\n\t\t\t</List>\n\t\t\t\n\t\t\n\t\t</Group>\n\t</Panel>\n\t)\n};\n\n\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\r\nimport {Icon28AddOutline} from '@vkontakte/icons'\r\nimport { Panel, PanelHeader, PanelHeaderBack,Group, Gradient, Title, Avatar, InfoRow, Header,SimpleCell, CellButton, Textarea, FormItem, Button, Cell,MiniInfoCell } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst Detailed = props => {\r\n\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [addNote, setAddNote] = useState(false);\r\n    const [notes, setNotes] = useState(null);\r\n\r\n    let user;\r\n    let month = ['January', \"February\", 'March', 'April', 'May', 'June', 'July', 'August', 'September','Oktober', 'November', 'December'];\r\n\r\n    useEffect(()=>{\r\n        setUserInfo( i => props.userFriends.response.items[props.whichUser])\r\n    \r\n      \r\n    },[props])\r\n\r\n    function getDate(str){\r\n        let result = str.match(/\\d+/g);\r\n        result[1] = month[result[1]-1];\r\n       return result.join(' ');\r\n    }\r\n\r\n    function writeANote(e){\r\n        setNotes(n=> e.target.value);\r\n    }\r\n\r\n    function addNoteStorage(){\r\n        props.setStorage(props.storage.map((el,index) =>{\r\n            if(el.id === userInfo.domain && notes){\r\n               return  {...props.storage[index], id: userInfo.domain, note:[...el.note, notes]};\r\n            } else {\r\n                return el\r\n            }\r\n        }))\r\n        setNotes(n => '')\r\n        setAddNote( n => !n)\r\n    }\r\n\r\n    function deleteNote(indexU, indexN){\r\n        if(props.storage[indexU].note.length){\r\n          props.setStorage(props.storage.map((el,index) =>{\r\n            if(index === indexU){\r\n               return  {...props.storage[index], id: userInfo.domain, note:[...el.note.slice(0,indexN),...el.note.slice(indexN+1)]};\r\n            } else {\r\n                return el\r\n            }\r\n        }))  \r\n        }\r\n    }\r\nconsole.log(notes)\r\nuserInfo?     console.log('detailed', props.storage): '';\r\n    return (\r\n      <Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>\r\n\t\t\tback to the list {console.log(userInfo)}\r\n\t\t</PanelHeader>\r\n        { userInfo? user = (\r\n    <Group>\r\n        <Gradient style={{\r\n            margin: 0,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            textAlign: 'center',\r\n            padding: 32,\r\n        }}> \r\n        {userInfo?.photo_200_orig? <Avatar size={96} src={userInfo.photo_200_orig}/> : null}\r\n        <Title style={{ marginBottom: 8, marginTop: 20 }} level=\"2\" weight=\"medium\">{`${userInfo.first_name} ${userInfo.last_name}  `}</Title>\r\n        {userInfo.status? <MiniInfoCell textWrap=\"full\">\r\n                    <InfoRow header='Что думает:'>\r\n                        {`${userInfo.status}`}\r\n                   </InfoRow> \r\n               </MiniInfoCell>: ''}\r\n\r\n        </Gradient>\r\n          <Group>\r\n              <Header mode=\"secondary\">Информация о пользователе</Header>\r\n              \r\n               {userInfo.bdate?<SimpleCell>\r\n                    <InfoRow header='День рождения'>\r\n                       {`${getDate(userInfo.bdate)}`}\r\n                   </InfoRow> \r\n               </SimpleCell> : ''}\r\n               {userInfo.city && userInfo.city.title ?<SimpleCell>\r\n                    <InfoRow header='Город'>\r\n                        {`${userInfo.city.title}`}\r\n                   </InfoRow> \r\n               </SimpleCell> : ''}\r\n               {userInfo.country && userInfo.country.title ?<SimpleCell>\r\n                    <InfoRow header='Страна'>\r\n                        {`${userInfo.country.title}`}\r\n                   </InfoRow> \r\n               </SimpleCell >: ''}\r\n               {userInfo.faculty_name?<SimpleCell>\r\n                    <InfoRow header='Образование'>\r\n                    Закончил\r\n                        {` ${userInfo.faculty_name}`}<br/>\r\n                        {userInfo.university_name? ` в ${userInfo.university_name} `: '' }\r\n                        {userInfo.graduation? `  в ${userInfo.graduation} году`: '' }\r\n                   </InfoRow> \r\n               </SimpleCell >: ''}\r\n              \r\n          </Group>\r\n          \r\n          {addNote ? <Group>\r\n              <FormItem top=\"What`s on your mind?\">\r\n                  <Textarea onChange={writeANote} placeholder=\"write something about this person\" />\r\n              </FormItem>\r\n               </Group> : '' }\r\n          {addNote? <Button style={{marginLeft: '15px'}} onClick={()=>addNoteStorage()} mode={notes? 'commerce': 'destructive'}>{notes? 'save' : 'close'}</Button> :<CellButton onClick={()=>setAddNote( n => !n)} before={<Icon28AddOutline />}>Добавить заметку</CellButton>}\r\n\r\n          {props.storage[props.whichUser].note.length?\r\n          <Group>\r\n          <Header mode=\"secondary\">Заметки о пользователе</Header>\r\n          <SimpleCell>\r\n    \r\n               {props.storage[props.whichUser].note.map((el,index) =>{\r\n                  return <MiniInfoCell textWrap=\"full\">{`Note ${index+1}: ${el}`}<Button style={{marginLeft: '15px'}} onClick={()=>deleteNote(props.whichUser, index)} mode=\"destructive\">delete</Button></MiniInfoCell>\r\n              })} \r\n              \r\n          </SimpleCell>\r\n          </Group> : ''\r\n           }\r\n          \r\n        </Group>\r\n        \r\n         ): ''}\r\n        \r\n\t\r\n\t</Panel>  \r\n    )\r\n\t\r\n};\r\n\r\n\r\nexport default Detailed;","import React, { useState, useEffect, useMemo } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Detailed from './panels/Detailed';\n\nconst STORAGE_TEST = {\n\tSTATUS: 'online'\n}\n\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [userFriends, setUsersFriends] = useState(null);\n\tconst [detailedUser, setDetailedUser] = useState(null);\n\tconst [noteStorage, setNoteStorage] = useState({})\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst userFriendsToken = await bridge.send('VKWebAppGetAuthToken', {\n\t\t\t\tapp_id: 7888409,\n\t\t\t\tscope: \"friends\"\n\t\t\t});\n\t\t\t\n\t\t\tconst friends = await bridge.send(\"VKWebAppCallAPIMethod\", {\n\t\t\t\tmethod: \"friends.get\",\n\t\t\t\trequest_id:7888409,\n\t\t\t\tparams: {\n\t\t\t\t\t\"user_ids\": `${user.id}`, \n\t\t\t\t\t\"v\":\"5.131\",\n\t\t\t\t\t\"access_token\":`${userFriendsToken.access_token}`,\n\t\t\t\t\t\"fields\": \" nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities\"\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst storage = await bridge.send('VKWebAppStorageSet', {\n\t\t\t\tkey: STORAGE_TEST.STATUS ,\n\t\t\t\tvalue: JSON.stringify({online: true})\n\t\t\t\t\n\t\t\t});\n\t\t\tconsole.log(storage)\n\t\t\tconst storageGet = await bridge.send('VKWebAppStorageGet', {\n\t\t\t\tkeys: Object.values(STORAGE_TEST),\n\t\t\t})\n\t\t\tconsole.log(JSON.parse(storageGet.keys[0].value))\n\n\n\t        setUser(user);\n\t        setUsersFriends(friends);\n\t\t\tsetPopout(null);\n\t\t\t\n\t\t}\n\t\tfetchData() \n\t}, []);\n\n\tuseEffect(()=>{\n\t\tif(userFriends){\n\t\t\tlet friendsArr = userFriends.response.items;\n\t\t\tconsole.log('friends', friendsArr)\n\t\t\tsetNoteStorage(n=> friendsArr.map(el=>{\n\t\t\t\treturn {...n, id: el.domain, note: []}\n\t\t\t}))\n\t\t}\n\n\t},[userFriends])\n\n\nconsole.log('storage',noteStorage)\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\tconsole.log(userFriends)\n\tconsole.log('user is', detailedUser)\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} chooseUser={setDetailedUser} userFriends={userFriends} go={go} />\n\t\t\t\t\t<Detailed id='detailed' storage={noteStorage} setStorage={setNoteStorage}whichUser={detailedUser} userFriends={userFriends}  go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}